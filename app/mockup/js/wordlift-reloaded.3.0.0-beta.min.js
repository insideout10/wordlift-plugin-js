(function(){var a,b,c,d,e=[].indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(b in this&&this[b]===a)return b;return-1};b=function(){function a(a){this._html=a}return a.prototype._htmlPositions=[],a.prototype._textPositions=[],a.prototype._html="",a.prototype._text="",a.create=function(b){var c;return c=new a(b),c.parse(),c},a.prototype.parse=function(){var a,b,c,d,e,f,g,h,i;for(this._htmlPositions=[],this._textPositions=[],this._text="",this._html=this._html.replace(/&nbsp;/gim," "),f=/([^<]*)(<[^>]*>)([^<]*)/gim,g=0,b=0;e=f.exec(this._html);)d=e[1],a=e[2],c=e[3],i=d+("</p>"===a.toLowerCase()?"\n\n":""),h=c,g+=i.length,b+=d.length+a.length,this._htmlPositions.push(b),this._textPositions.push(g),g+=h.length,b+=c.length,this._text+=i+h;return""===this._text&&""!==this._html&&(this._text=new String(this._html)),0===this._textPositions.length||0!==this._textPositions[0]?(this._htmlPositions.unshift(0),this._textPositions.unshift(0)):void 0},a.prototype.text2html=function(a){var b,c,d,e,f;for(b=0,d=0,c=e=0,f=this._textPositions.length;(f>=0?f>e:e>f)&&!(a<this._textPositions[c]);c=f>=0?++e:--e)b=this._htmlPositions[c],d=this._textPositions[c];return b+a-d},a.prototype.html2text=function(a){var b,c,d,e,f;if(a<this._htmlPositions[0])return 0;for(b=0,d=0,c=e=0,f=this._htmlPositions.length;(f>=0?f>e:e>f)&&!(a<this._htmlPositions[c]);c=f>=0?++e:--e)b=this._htmlPositions[c],d=this._textPositions[c];return d+a-b},a.prototype.insertHtml=function(a,b){var c;return c=this.text2html(b.text),this._html=this._html.substring(0,c)+a+this._html.substring(c),this.parse()},a.prototype.getHtml=function(){return this._html},a.prototype.getText=function(){return this._text},a}(),window.Traslator=b,a=jQuery,angular.module("wordlift.core",[]).service("AnalysisService",["$log","$http","$rootScope",function(a,b,c){var d,e;return d=e={},d.parse=function(a){var b,c,d;d=a.entities;for(c in d)b=d[c],b.occurrences=0,b.id=c;return a},d.perform=function(){return b({method:"get",url:"assets/sample-response.json"}).success(function(a){return c.$broadcast("analysisPerformed",d.parse(a))})},d}]).service("ConfigurationService",["$log","$http","$rootScope",function(a,b,c){var d,e;return d=e={},d.loadConfiguration=function(){return b({method:"get",url:"assets/sample-widget-configuration.json"}).success(function(a){return c.$broadcast("configurationLoaded",a)})},d}]).controller("coreController",["$log","$scope","$rootScope",function(a,b){return b.configuration=[],b.analysis={},b.entitySelection={},b.occurences={},b.annotation=void 0,b.$on("configurationLoaded",function(a,c){var d,e,f,g;for(g=c.classificationBoxes,e=0,f=g.length;f>e;e++)d=g[e],b.entitySelection[d.id]={};return b.configuration=c}),b.$on("analysisPerformed",function(c,d){return a.debug(d),b.analysis=d}),b.onSelectedEntityTile=function(c,d){return a.debug("Entity tile selected for entity "+c.id+" within '"+d+"' scope"),null==b.entitySelection[d][c.id]?(b.entitySelection[d][c.id]=c,a.debug(b.entitySelection)):b.entitySelection[d][c.id]=void 0}}]).directive("wlClassificationBox",["$log",function(){return{restrict:"E",scope:!0,template:'    	<div class="classification-box">\n    		<h4 class="box-header">{{box.label}}</h4>\n	<wl-entity notify="onSelectedEntityTile(entity.id, box.id)" entity="entity" ng-repeat="entity in entities"></wl-entity>\n</div>	',link:function(a){var b,c,d,f,g;a.entities={},d=a.analysis.entities,g=[];for(c in d)b=d[c],f=b.mainType,g.push(e.call(a.box.registeredTypes,f)>=0?a.entities[c]=b:void 0);return g},controller:function(a){var b;return a.tiles=[],b={onSelectedTile:function(b){return a.onSelectedEntityTile(b.entity,a.box.id)},addTile:function(b){return a.tiles.push(b)},closeTiles:function(){var b,c,d,e,f;for(e=a.tiles,f=[],c=0,d=e.length;d>c;c++)b=e[c],f.push(b.close());return f}}}}}]).directive("wlEntity",["$log",function(){return{require:"^wlClassificationBox",restrict:"E",scope:{entity:"="},template:'<div ng-class="\'wl-\' + entity.mainType">\n  <span ng-click="select()">{{entity.label}}</span><small ng-show="entity.occurrences > 0">({{entity.occurrences}})</small>\n  <small class="toggle-button" ng-hide="isOpened" ng-click="toggle()">+</small>\n	<small class="toggle-button" ng-show="isOpened" ng-click="toggle()">-</small>\n</div>\n<div class="details" ng-show="isOpened">{{entity.description}}</div>',link:function(a,b,c,d){return d.addTile(a),a.isOpened=!1,a.open=function(){return a.isOpened=!0},a.close=function(){return a.isOpened=!1},a.toggle=function(){return d.closeTiles(),a.isOpened=!a.isOpened},a.select=function(){return d.onSelectedTile(a)}}}}]),a(c=a('<div id="wordlift-edit-post-wrapper" ng-controller="coreController">\n	<wl-classification-box ng-repeat="box in configuration.classificationBoxes"></wl-classification-box>\n	<hr />\n	<div ng-repeat="(box, e) in entitySelection">\n		<span>{{ box }}</span> - <span>{{ e }}</span> \n	</div>\n</div>').appendTo("#dx")),d=angular.bootstrap(a("#wordlift-edit-post-wrapper"),["wordlift.core"]),d.invoke(["ConfigurationService","AnalysisService","$rootScope",function(a,b,c){return c.$apply(function(){return b.perform(),a.loadConfiguration()})}])}).call(this);
//# sourceMappingURL=wordlift-reloaded.3.0.0-beta.min.map