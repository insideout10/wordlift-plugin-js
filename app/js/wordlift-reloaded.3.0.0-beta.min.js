(function(){var a,b,c,d,e=[].indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(b in this&&this[b]===a)return b;return-1};b=function(){function a(a){this._html=a}return a.prototype._htmlPositions=[],a.prototype._textPositions=[],a.prototype._html="",a.prototype._text="",a.create=function(b){var c;return c=new a(b),c.parse(),c},a.prototype.parse=function(){var a,b,c,d,e,f,g,h,i;for(this._htmlPositions=[],this._textPositions=[],this._text="",this._html=this._html.replace(/&nbsp;/gim," "),f=/([^<]*)(<[^>]*>)([^<]*)/gim,g=0,b=0;e=f.exec(this._html);)d=e[1],a=e[2],c=e[3],i=d+("</p>"===a.toLowerCase()?"\n\n":""),h=c,g+=i.length,b+=d.length+a.length,this._htmlPositions.push(b),this._textPositions.push(g),g+=h.length,b+=c.length,this._text+=i+h;return""===this._text&&""!==this._html&&(this._text=new String(this._html)),0===this._textPositions.length||0!==this._textPositions[0]?(this._htmlPositions.unshift(0),this._textPositions.unshift(0)):void 0},a.prototype.text2html=function(a){var b,c,d,e,f;for(b=0,d=0,c=e=0,f=this._textPositions.length;(f>=0?f>e:e>f)&&!(a<this._textPositions[c]);c=f>=0?++e:--e)b=this._htmlPositions[c],d=this._textPositions[c];return b+a-d},a.prototype.html2text=function(a){var b,c,d,e,f;if(a<this._htmlPositions[0])return 0;for(b=0,d=0,c=e=0,f=this._htmlPositions.length;(f>=0?f>e:e>f)&&!(a<this._htmlPositions[c]);c=f>=0?++e:--e)b=this._htmlPositions[c],d=this._textPositions[c];return d+a-b},a.prototype.insertHtml=function(a,b){var c;return c=this.text2html(b.text),this._html=this._html.substring(0,c)+a+this._html.substring(c),this.parse()},a.prototype.getHtml=function(){return this._html},a.prototype.getText=function(){return this._text},a}(),window.Traslator=b,angular.module("wordlift.editpost.widget.controllers.EditPostWidgetController",["wordlift.editpost.widget.services.AnalysisService","wordlift.editpost.widget.services.EditorService","wordlift.editpost.widget.providers.ConfigurationProvider"]).filter("entityTypeIn",["$log",function(){return function(a,b){var c,d,f,g;d=[];for(f in a)c=a[f],g=c.mainType,e.call(b,g)>=0&&d.push(c);return d}}]).controller("EditPostWidgetController",["EditorService","AnalysisService","configuration","$log","$scope","$rootScope","$injector",function(a,b,c,d,e,f,g){var h,i,j,k,l,m,n,o;for(e.configuration=[],e.analysis={},e.newEntity=b.createEntity(),e.selectedEntities={},e.widgets={},e.annotation=void 0,e.boxes=[],e.isSelectionCollapsed=!0,n=c.boxes,j=0,l=n.length;l>j;j++)for(h=n[j],e.selectedEntities[h.id]={},e.widgets[h.id]={},o=h.registeredWidgets,k=0,m=o.length;m>k;k++)i=o[k],e.widgets[h.id][i]=[];return e.configuration=c,e.createTextAnnotationFromCurrentSelection=function(){return a.createTextAnnotationFromCurrentSelection()},e.selectAnnotation=function(b){return a.selectAnnotation(b)},e.addNewEntityToAnalysis=function(){var a;return e.analysis.entities[e.newEntity.id]=e.newEntity,a=e.analysis.annotations[e.annotation],a.entityMatches.push({entityId:e.newEntity.id,confidence:1}),e.analysis.entities[e.newEntity.id].annotations[a.id]=a,e.newEntity=b.createEntity()},e.$on("isSelectionCollapsed",function(a,b){return d.debug("Going to se isSelectionAvailable to "+b),e.isSelectionCollapsed=b}),e.$on("updateOccurencesForEntity",function(a,b,c){var f,g,i,j;if(d.debug("Occurrences "+c.length+" for "+b),e.analysis.entities[b].occurrences=c,null!=e.annotation){g=e.selectedEntities;for(h in g)f=g[h],e.boxes[h].relink(e.analysis.entities[b],e.annotation)}if(0===c.length){i=e.selectedEntities,j=[];for(h in i)f=i[h],delete e.selectedEntities[h][b],j.push(e.boxes[h].deselect(e.analysis.entities[b]));return j}}),e.$on("textAnnotationClicked",function(a,b){return e.annotation=b}),e.$on("textAnnotationAdded",function(a,b){return d.debug("added a new annotation with Id "+b.id),e.analysis.annotations[b.id]=b,e.annotation=b.id,e.newEntity.label=b.text}),e.$on("analysisPerformed",function(a,b){return e.analysis=b}),e.$on("updateWidget",function(a,b,c){var f,h;return d.debug("Going to updated widget "+b+" for box "+c),h=g.get(""+b+"DataRetrieverService"),f=h.loadData(e.selectedEntities[c]),e.widgets[c][b]=f}),e.onSelectedEntityTile=function(a,b){var c,f;d.debug("Entity tile selected for entity "+a.id+" within '"+b.id+"' scope"),f=e.boxes;for(c in f)h=f[c],h.closeWidgets();return null==e.selectedEntities[b.id][a.id]?(e.selectedEntities[b.id][a.id]=a,e.$emit("entitySelected",a,e.annotation)):e.$emit("entityDeselected",a,e.annotation)}}]),angular.module("wordlift.editpost.widget.directives.wlClassificationBox",[]).directive("wlClassificationBox",["$log",function(a){return{restrict:"E",scope:!0,transclude:!0,template:'<div class="classification-box">\n	<div class="box-header">\n          <h5 class="label">{{box.label}}\n            <span class="wl-suggestion-tools" ng-show="hasSelectedEntities()">\n              <i ng-class="\'wl-\' + widget" title="{{widget}}" ng-click="toggleWidget(widget)" ng-repeat="widget in box.registeredWidgets" class="wl-widget-icon"></i>\n            </span>\n            <span ng-show="isWidgetOpened" class="wl-widget-label">{{currentWidget}}\n              <i ng-click="toggleWidget(currentWidget)" class="wl-deselect-widget"></i>\n            </span>  \n          </h5>\n          <div ng-show="isWidgetOpened" class="box-widgets">\n            <div ng-show="currentWidget == widget" ng-repeat="widget in box.registeredWidgets">\n              <img ng-click="embedImageInEditor(item.uri)"ng-src="{{ item.uri }}" ng-repeat="item in widgets[ box.id ][ widget ]" />\n            </div>\n          </div>\n          <div class="selected-entities">\n            <span ng-class="\'wl-\' + entity.mainType" ng-repeat="(id, entity) in selectedEntities[box.id]" class="wl-selected-item">\n              {{ entity.label}}\n              <i class="wl-deselect-item" ng-click="onSelectedEntityTile(entity, box)"></i>\n            </span>\n          </div>\n        </div>\n  			<div class="box-tiles">\n          <div ng-transclude></div>\n  		  </div>\n      </div>	',link:function(a){return a.currentWidget=void 0,a.isWidgetOpened=!1,a.closeWidgets=function(){return a.currentWidget=void 0,a.isWidgetOpened=!1},a.hasSelectedEntities=function(){return Object.keys(a.selectedEntities[a.box.id]).length>0},a.embedImageInEditor=function(b){return a.$emit("embedImageInEditor",b)},a.toggleWidget=function(b){return a.currentWidget===b?(a.currentWidget=void 0,a.isWidgetOpened=!1):(a.currentWidget=b,a.isWidgetOpened=!0,a.$emit("updateWidget",b,a.box.id))}},controller:function(b){var c;return b.tiles=[],b.$parent.boxes[b.box.id]=b,b.deselect=function(a){var c,d,e,f,g;for(f=b.tiles,g=[],d=0,e=f.length;e>d;d++)c=f[d],g.push(c.entity.id===a.id?c.isSelected=!1:void 0);return g},b.relink=function(a,c){var d,f,g,h,i;for(h=b.tiles,i=[],f=0,g=h.length;g>f;f++)d=h[f],i.push(d.entity.id===a.id?d.isLinked=e.call(d.entity.occurrences,c)>=0:void 0);return i},b.$watch("annotation",function(c){var d,f,g,h,i;for(a.debug("Watching annotation ... New value "+c),b.currentWidget=void 0,b.isWidgetOpened=!1,h=b.tiles,i=[],f=0,g=h.length;g>f;f++)d=h[f],null!=c?(d.isVisible=null!=d.entity.annotations[c],d.annotationModeOn=!0,i.push(d.isLinked=e.call(d.entity.occurrences,c)>=0)):(d.isVisible=!0,d.isLinked=!1,i.push(d.annotationModeOn=!1));return i}),c=this,c.onSelectedTile=function(a){return a.isSelected=!a.isSelected,b.onSelectedEntityTile(a.entity,b.box)},c.addTile=function(a){return b.tiles.push(a)},c.closeTiles=function(){var a,c,d,e,f;for(e=b.tiles,f=[],c=0,d=e.length;d>c;c++)a=e[c],f.push(a.close());return f}}}}]),angular.module("wordlift.editpost.widget.directives.wlEntityForm",[]).directive("wlEntityForm",["$log",function(){return{restrict:"E",scope:{entity:"=",onSubmit:"&"},template:'<form class="wl-entity-form" ng-submit="onSubmit()">\n<div>\n    <label>Entity label</label>\n    <input type="text" ng-model="entity.label" />\n</div>\n<div>\n    <label>Entity type</label>\n    <select ng-model="entity.mainType" ng-options="type.id as type.name for type in supportedTypes" ></select>\n</div>\n<div>\n    <label>Entity Description</label>\n    <textarea ng-model="entity.description" rows="6"></textarea>\n</div>\n<div>\n    <label>Entity id</label>\n    <input type="text" ng-model="entity.id" />\n</div>\n<div>\n    <label>Entity Same as</label>\n    <input type="text" ng-model="entity.sameAs" />\n</div>\n<input type="submit" value="save" />\n</form>',link:function(a){return a.supportedTypes=[{id:"person",name:"http://schema.org/Person"},{id:"place",name:"http://schema.org/Place"},{id:"organization",name:"http://schema.org/Organization"},{id:"event",name:"http://schema.org/Event"},{id:"creative-work",name:"http://schema.org/CreativeWork"},{id:"thing",name:"http://schema.org/Thing"}]}}}]),angular.module("wordlift.editpost.widget.directives.wlEntityTile",[]).directive("wlEntityTile",["$log",function(){return{require:"^wlClassificationBox",restrict:"E",scope:{entity:"="},template:'<div ng-class="\'wl-\' + entity.mainType" ng-show="isVisible" class="entity">\n  <i ng-show="annotationModeOn" ng-class="{ \'wl-linked\' : isLinked, \'wl-unlinked\' : !isLinked }"></i>\n        <i ng-hide="annotationModeOn" ng-class="{ \'wl-selected\' : isSelected, \'wl-unselected\' : !isSelected }"></i>\n        <i class="type"></i>\n        <span class="label" ng-click="select()">{{entity.label}}</span>\n        <small ng-show="entity.occurrences.length > 0">({{entity.occurrences.length}})</small>\n        <i ng-class="{ \'wl-more\': isOpened == false, \'wl-less\': isOpened == true }" ng-click="toggle()"></i>\n  <span ng-class="{ \'active\' : editingModeOn }" ng-click="toggleEditingMode()" ng-show="isOpened" class="wl-edit-button">Edit</span>\n        <div class="details" ng-show="isOpened">\n          <p ng-hide="editingModeOn"><img class="thumbnail" ng-src="{{ entity.images[0] }}" />{{entity.description}}</p>\n          <wl-entity-form entity="entity" ng-show="editingModeOn" on-submit="toggleEditingMode()"></wl-entity-form>\n        </div>\n\n</div>\n',link:function(a,b,c,d){return d.addTile(a),a.isOpened=!1,a.isVisible=!0,a.isSelected=!1,a.isLinked=!1,a.annotationModeOn=!1,a.editingModeOn=!1,a.toggleEditingMode=function(){return a.editingModeOn=!a.editingModeOn},a.open=function(){return a.isOpened=!0},a.close=function(){return a.isOpened=!1},a.toggle=function(){return a.isOpened||d.closeTiles(),a.isOpened=!a.isOpened},a.select=function(){return d.onSelectedTile(a)}}}}]),angular.module("wordlift.editpost.widget.services.AnalysisService",[]).service("AnalysisService",["$log","$http","$rootScope",function(a,b,c){var d,e,f,g,h;return g=function(a){var b;for(null==a&&(a=8),b="";b.length<a;)b+=Math.random().toString(36).substr(2);return b.substr(0,a)},e=function(a,b){return d(d({},a),b)},d=function(a,b){var c,d;for(c in b)d=b[c],a[c]=d;return a},f=h={},f.createEntity=function(a){var b;return null==a&&(a={}),b={id:"local-entity-"+g(32),label:"",description:"",mainType:"thing",types:[],images:[],occurrences:[],annotations:{}},e(b,a)},f.createAnnotation=function(a){var b;return null==a&&(a={}),b={id:"urn:local-text-annotation-"+g(32),text:"",start:0,end:0,entityMatches:[]},e(b,a)},f.parse=function(a){var b,c,d,e,f,g,h,i,j;h=a.entities;for(e in h)d=h[e],d.id=e,d.occurrences=[],d.annotations={};i=a.annotations;for(e in i)for(b=i[e],b.id=e,j=b.entityMatches,f=0,g=j.length;g>f;f++)c=j[f],a.entities[c.entityId].annotations[e]=b;return a},f.perform=function(){return b({method:"get",url:"assets/sample-response.json"}).success(function(a){return c.$broadcast("analysisPerformed",f.parse(a))})},f}]),angular.module("wordlift.editpost.widget.services.EditorService",["wordlift.editpost.widget.services.AnalysisService"]).service("EditorService",["AnalysisService","$log","$http","$rootScope",function(a,c,d,e){var f,g,h,i,j;return i=function(){return tinyMCE.get("content")},h=function(a,b){var c,d;return d=i(),d.dom.addClass(a.id,"disambiguated"),d.dom.addClass(a.id,"wl-"+b.mainType),c=d.dom.getAttrib(a.id,"itemid"),d.dom.setAttrib(a.id,"itemid",b.id),c},g=function(a,b){var c,d;return d=i(),d.dom.removeClass(a.id,"disambiguated"),d.dom.removeClass(a.id,"wl-"+b.mainType),c=d.dom.getAttrib(a.id,"itemid"),d.dom.setAttrib(a.id,"itemid",""),c},f=function(a){var b,c,d,e,f,g,h;if(d=i(),f=[],""===a)return f;for(c=d.dom.select("span.textannotation"),g=0,h=c.length;h>g;g++)b=c[g],e=d.dom.getAttrib(b.id,"itemid"),e===a&&f.push(b.id);return f},e.$on("analysisPerformed",function(a,b){return null!=b&&null!=b.annotations?j.embedAnalysis(b):void 0}),e.$on("embedImageInEditor",function(a,b){return tinyMCE.execCommand("mceInsertContent",!1,'<img src="'+b+'" width="100%" />')}),e.$on("entitySelected",function(a,b,d){var g,i,j,k,l,m,n,o;if(i=[],null!=d)i.push(h(b.annotations[d],b));else{o=b.annotations;for(k in o)g=o[k],c.debug("Going to disambiguate annotation "+k),i.push(h(g,b))}for(m=0,n=i.length;n>m;m++)j=i[m],j&&(l=f(j),e.$broadcast("updateOccurencesForEntity",j,l));return l=f(b.id),e.$broadcast("updateOccurencesForEntity",b.id,l)}),e.$on("entityDeselected",function(a,b,c){var d,h,i,j,k,l,m,n;if(h=[],null!=c)g(b.annotations[c],b);else{n=b.annotations;for(j in n)d=n[j],g(d,b)}for(l=0,m=h.length;m>l;l++)i=h[l],i&&(k=f(i),e.$broadcast("updateOccurencesForEntity",i,k));return k=f(b),e.$broadcast("updateOccurencesForEntity",b.id,k)}),j={createTextAnnotationFromCurrentSelection:function(){var d,f,g,h,j,k,l,m;return f=i(),f.selection.isCollapsed()?void c.warn("Invalid selection! The text annotation cannot be created"):(h=""+f.selection.getSel(),j=a.createAnnotation({text:h}),k='<span id="'+j.id+'" class="textannotation selected">'+f.selection.getContent()+"</span>",f.selection.setContent(k),d=f.getContent({format:"html"}),m=b.create(d),g=d.indexOf(k),l=m.html2text(g),j.start=l,j.end=j.start+h.length,c.debug("New text annotation created!"),c.debug(j),e.$broadcast("textAnnotationAdded",j))},selectAnnotation:function(a){var b,c,d,f,g;for(c=i(),g=c.dom.select("span.textannotation"),d=0,f=g.length;f>d;d++)b=g[d],c.dom.removeClass(b.id,"selected");return e.$broadcast("textAnnotationClicked",void 0),c.dom.hasClass(a,"textannotation")?(c.dom.addClass(a,"selected"),e.$broadcast("textAnnotationClicked",a)):void 0},embedAnalysis:function(){return function(a){var c,d,e,f,g,h,j,k,l;for(e=i(),h=e.getContent({format:"raw"});h.match(/<(\w+)[^>]*\sclass="textannotation[^"]*"[^>]*>([^<]+)<\/\1>/gim,"$2");)h=h.replace(/<(\w+)[^>]*\sclass="textannotation[^"]*"[^>]*>([^<]+)<\/\1>/gim,"$2");k=b.create(h),l=a.annotations;for(d in l)c=l[d],g=a.entities[c.entityMatches[0].entityId],f='<span id="'+d+'" class="textannotation">',k.insertHtml(f,{text:c.start}),k.insertHtml("</span>",{text:c.end});return j=e.isDirty(),e.setContent(k.getHtml(),{format:"raw"}),e.isNotDirty=!j}}(this)}}]),angular.module("wordlift.editpost.widget.services.ImageSuggestorDataRetrieverService",[]).service("ImageSuggestorDataRetrieverService",["$log","$http","$rootScope",function(){var a;return a={},a.loadData=function(a){var b,c,d,e,f,g,h;e=[];for(c in a)for(b=a[c],h=b.images,f=0,g=h.length;g>f;f++)d=h[f],e.push({uri:d});return e},a}]),angular.module("wordlift.editpost.widget.providers.ConfigurationProvider",[]).provider("configuration",function(){var a,b;return a=void 0,b={setBoxes:function(b){return a=b},$get:function(){return{boxes:a}}}}),a=jQuery,angular.module("wordlift.editpost.widget",["wordlift.editpost.widget.providers.ConfigurationProvider","wordlift.editpost.widget.controllers.EditPostWidgetController","wordlift.editpost.widget.directives.wlClassificationBox","wordlift.editpost.widget.directives.wlEntityForm","wordlift.editpost.widget.directives.wlEntityTile","wordlift.editpost.widget.services.AnalysisService","wordlift.editpost.widget.services.EditorService","wordlift.editpost.widget.services.ImageSuggestorDataRetrieverService"]).config(function(a){return a.setBoxes(window.wordlift.classificationBoxes)}),a(c=a('<div id="wordlift-edit-post-wrapper" ng-controller="EditPostWidgetController">\n	<div ng-click="createTextAnnotationFromCurrentSelection()">\n        <span class="wl-new-entity-button" ng-class="{ \'selected\' : !isSelectionCollapsed }">\n          <i class="wl-annotation-label-icon"></i> add entity \n        </span>\n      </div>\n      <div ng-show="annotation">\n        <h4 class="wl-annotation-label">\n          <i class="wl-annotation-label-icon"></i>\n          {{ analysis.annotations[ annotation ].text }} \n          <small>[ {{ analysis.annotations[ annotation ].start }}, {{ analysis.annotations[ annotation ].end }} ]</small>\n          <i class="wl-annotation-label-remove-icon" ng-click="selectAnnotation(undefined)"></i>\n        </h4>\n        <wl-entity-form entity="newEntity" on-submit="addNewEntityToAnalysis()"ng-show="analysis.annotations[annotation].entityMatches.length == 0"></wl-entity-form>\n      </div>\n      <wl-classification-box ng-repeat="box in configuration.boxes">\n        <wl-entity-tile entity="entity" ng-repeat="entity in analysis.entities | entityTypeIn:box.registeredTypes"></wl-entity>\n      </wl-classification-box>\n    </div>').appendTo("#dx"),d=angular.bootstrap(a("#wordlift-edit-post-wrapper"),["wordlift.editpost.widget"]),tinymce.PluginManager.add("wordlift",function(a){return a.onLoadContent.add(function(){return d.invoke(["AnalysisService","$rootScope",function(a,b){return b.$apply(function(){return a.perform()})}])}),a.onNodeChange.add(function(a){return d.invoke(["$rootScope",function(b){return b.$apply(function(){return b.$broadcast("isSelectionCollapsed",a.selection.isCollapsed())})}])}),a.onClick.add(function(a,b){return d.invoke(["EditorService","$rootScope",function(a,c){return c.$apply(function(){return a.selectAnnotation(b.target.id)})}])})}))}).call(this);
//# sourceMappingURL=wordlift-reloaded.3.0.0-beta.min.map