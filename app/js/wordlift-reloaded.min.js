(function(){var a,b,c,d,e=[].indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(b in this&&this[b]===a)return b;return-1};b=function(){function a(a){this._html=a}return a.prototype._htmlPositions=[],a.prototype._textPositions=[],a.prototype._html="",a.prototype._text="",a.create=function(b){var c;return c=new a(b),c.parse(),c},a.prototype.parse=function(){var a,b,c,d,e,f,g,h,i;for(this._htmlPositions=[],this._textPositions=[],this._text="",this._html=this._html.replace(/&nbsp;/gim," "),f=/([^<]*)(<[^>]*>)([^<]*)/gim,g=0,b=0;e=f.exec(this._html);)d=e[1],a=e[2],c=e[3],i=d+("</p>"===a.toLowerCase()?"\n\n":""),h=c,g+=i.length,b+=d.length+a.length,this._htmlPositions.push(b),this._textPositions.push(g),g+=h.length,b+=c.length,this._text+=i+h;return""===this._text&&""!==this._html&&(this._text=new String(this._html)),0===this._textPositions.length||0!==this._textPositions[0]?(this._htmlPositions.unshift(0),this._textPositions.unshift(0)):void 0},a.prototype.text2html=function(a){var b,c,d,e,f;for(b=0,d=0,c=e=0,f=this._textPositions.length;(f>=0?f>e:e>f)&&!(a<this._textPositions[c]);c=f>=0?++e:--e)b=this._htmlPositions[c],d=this._textPositions[c];return b+a-d},a.prototype.html2text=function(a){var b,c,d,e,f;if(a<this._htmlPositions[0])return 0;for(b=0,d=0,c=e=0,f=this._htmlPositions.length;(f>=0?f>e:e>f)&&!(a<this._htmlPositions[c]);c=f>=0?++e:--e)b=this._htmlPositions[c],d=this._textPositions[c];return d+a-b},a.prototype.insertHtml=function(a,b){var c;return c=this.text2html(b.text),this._html=this._html.substring(0,c)+a+this._html.substring(c),this.parse()},a.prototype.getHtml=function(){return this._html},a.prototype.getText=function(){return this._text},a}(),window.Traslator=b,a=jQuery,angular.module("wordlift.core",[]).service("AnalysisService",["$log","$http","$rootScope",function(a,b,c){var d,e;return d=e={},d.parse=function(a){var b,c,d,e,f,g,h,i,j;h=a.entities;for(e in h)d=h[e],d.occurrences=0,d.id=e,d.annotations={},d.isRelatedToAnnotation=function(a){return null!=this.annotations[a]?!0:!1};i=a.annotations;for(e in i)for(b=i[e],j=b.entityMatches,f=0,g=j.length;g>f;f++)c=j[f],a.entities[c.entityId].annotations[e]=b;return a},d.perform=function(){return b({method:"get",url:"assets/sample-response.json"}).success(function(a){return c.$broadcast("analysisPerformed",d.parse(a))})},d}]).service("ConfigurationService",["$log","$http","$rootScope",function(a,b,c){var d,e;return d=e={},d.loadConfiguration=function(){return b({method:"get",url:"assets/sample-widget-configuration.json"}).success(function(a){return c.$broadcast("configurationLoaded",a)})},d}]).controller("EditPostWidgetController",["$log","$scope","$rootScope",function(a,b){return b.configuration=[],b.analysis={},b.selectedEntities={},b.annotation=void 0,b.boxes=[],b.addBox=function(a,c){return b.boxes[c]=a},b.$on("configurationLoaded",function(a,c){var d,e,f,g;for(g=c.classificationBoxes,e=0,f=g.length;f>e;e++)d=g[e],b.selectedEntities[d.id]={};return b.configuration=c}),b.$on("analysisPerformed",function(c,d){return a.debug(d),b.analysis=d}),b.onSelectedEntityTile=function(c,d){return a.debug("Entity tile selected for entity "+c.id+" within '"+d+"' scope"),null==b.selectedEntities[d][c.id]?(b.selectedEntities[d][c.id]=c,a.debug(b.selectedEntities)):(delete b.selectedEntities[d][c.id],b.boxes[d].deselect(c))}}]).directive("wlClassificationBox",["$log",function(a){return{restrict:"E",scope:!0,template:'    	<div class="classification-box">\n    		<div class="box-header">\n          <h5 class="label">{{box.label}}</h5>\n          <span ng-class="\'wl-\' + entity.mainType" ng-repeat="(id, entity) in selectedEntities[box.id]" class="wl-selected-item">\n            {{ entity.label}}\n            <i class="wl-deselect-item" ng-click="onSelectedEntityTile(entity, box.id)"></i>\n          </span>\n        </div>\n	<wl-entity-tile notify="onSelectedEntityTile(entity.id, box.id)" entity="entity" ng-repeat="entity in entities"></wl-entity>\n</div>	',link:function(a){var b,c,d,f,g;a.entities={},d=a.analysis.entities,g=[];for(c in d)b=d[c],f=b.mainType,g.push(e.call(a.box.registeredTypes,f)>=0?a.entities[c]=b:void 0);return g},controller:function(b){var c;return b.tiles=[],b.addBox(b,b.box.id),b.deselect=function(a){var c,d,e,f,g;for(f=b.tiles,g=[],d=0,e=f.length;e>d;d++)c=f[d],g.push(c.entity.id===a.id?c.isSelected=!1:void 0);return g},b.$watch("annotation",function(c){var d,e,f,g,h;if(a.debug("annotation "+c),null!=c){for(g=b.tiles,h=[],e=0,f=g.length;f>e;e++)d=g[e],h.push(d.isVisible=d.entity.isRelatedToAnnotation(c));return h}}),c={onSelectedTile:function(a){return a.isSelected=!a.isSelected,b.onSelectedEntityTile(a.entity,b.box.id)},addTile:function(c){return a.debug("Adding tile with id "+c.$id),b.tiles.push(c)},closeTiles:function(){var a,c,d,e,f;for(e=b.tiles,f=[],c=0,d=e.length;d>c;c++)a=e[c],f.push(a.close());return f}}}}}]).directive("wlEntityTile",["$log",function(){return{require:"^wlClassificationBox",restrict:"E",scope:{entity:"="},template:'<div ng-class="wrapperCssClasses" ng-show="isVisible">\n  <i ng-class="{ \'wl-selected\' : isSelected, \'wl-unselected\' : !isSelected }"></i>\n        <i class="type"></i>\n        <span class="label" ng-click="select()">{{entity.label}}</span>\n        <small ng-show="entity.occurrences > 0">({{entity.occurrences}})</small>\n        <i ng-class="{ \'wl-more\': isOpened == false, \'wl-less\': isOpened == true }" ng-click="toggle()"></i>\n  <div class="details" ng-show="isOpened">\n          <p><img class="thumbnail" ng-src="{{ entity.images[0] }}" />{{entity.description}}</p>\n        </div>\n</div>\n',link:function(a,b,c,d){return d.addTile(a),a.isOpened=!1,a.isVisible=!0,a.isSelected=!1,a.wrapperCssClasses=["entity","wl-"+a.entity.mainType],a.open=function(){return a.isOpened=!0},a.close=function(){return a.isOpened=!1},a.toggle=function(){return a.isOpened||d.closeTiles(),a.isOpened=!a.isOpened},a.select=function(){return d.onSelectedTile(a)}}}}]),a(c=a('<div id="wordlift-edit-post-wrapper" ng-controller="EditPostWidgetController">\n	<wl-classification-box ng-repeat="box in configuration.classificationBoxes"></wl-classification-box>\n    </div>\n').appendTo("#dx"),d=angular.bootstrap(a("body"),["wordlift.core"]),d.invoke(["ConfigurationService","AnalysisService","$rootScope",function(a,b,c){return c.$apply(function(){return b.perform(),a.loadConfiguration()})}]),tinymce.PluginManager.add("wordlift",function(a){return a.onLoadContent.add(function(){}),a.addButton("wordlift_add_entity",{classes:"widget btn wordlift_add_entity",text:" ",tooltip:"Insert entity",onclick:function(){}}),a.addButton("wordlift",{classes:"widget btn wordlift",text:" ",tooltip:"Analyse",onclick:function(){}}),a.onClick.add(function(){})}))}).call(this);
//# sourceMappingURL=wordlift-reloaded.min.map